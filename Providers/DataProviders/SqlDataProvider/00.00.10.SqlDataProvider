/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/


IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetDateOfBirth') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetDateOfBirth
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetDateOfBirth
	@UserId int
AS
SELECT
	CONVERT(date, PropertyValue) AS QueryResult
FROM 
	{databaseOwner}{objectQualifier}UserProfile 
WHERE 
	PropertyDefinitionID = (
							SELECT 
								PropertyDefinitionID 
							FROM 
								{databaseOwner}{objectQualifier}ProfilePropertyDefinition 
							WHERE 
								PropertyName ='Date_Of_Birth'
							)
AND
	UserId = @UserId
GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetAgeAvg') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetAgeAvg
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetAgeAvg
	@UserId int
AS
SELECT
	CONVERT(int, ROUND(DATEDIFF(hour, PropertyValue, GETDATE())/8766.0,0)) AS QueryResult
FROM 
	{databaseOwner}{objectQualifier}UserProfile 
WHERE 
	PropertyDefinitionID = (
							SELECT 
								PropertyDefinitionID 
							FROM 
								{databaseOwner}{objectQualifier}ProfilePropertyDefinition 
							WHERE 
								PropertyName ='Date_Of_Birth'
							)
AND
	UserId = @UserId
GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetNumberFriends') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetNumberFriends
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetNumberFriends
	@UserId int
AS
SELECT 
	Count(*) AS QueryResult
FROM 
	{databaseOwner}{objectQualifier}UserRelationships 
WHERE 
	UserID = @UserId OR RelatedUserID = @UserId
AND 
	Status = 2 AND RelationshipID = 1

GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetNumberFollowers') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetNumberFollowers
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetNumberFollowers
	@UserId int
AS
SELECT 
	Count(*) AS QueryResult
FROM 
	{databaseOwner}{objectQualifier}UserRelationships 
WHERE 
	UserID = @UserId OR RelatedUserID = @UserId
AND 
	Status = 2 AND RelationshipID = 2

GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetNumberUsers') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetNumberUsers
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetNumberUsers
AS
SELECT 
	Count(*) AS QueryResult
FROM 
	{databaseOwner}{objectQualifier}Users

GO


IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetRelationshipUsers') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetRelationshipUsers
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetRelationshipUsers
AS
SELECT DISTINCT
	{databaseOwner}{objectQualifier}UserRelationships.UserID AS rKey, {databaseOwner}{objectQualifier}Users.Username AS rValue
FROM 
	{databaseOwner}{objectQualifier}UserRelationships 
INNER JOIN 
	{databaseOwner}{objectQualifier}Users 
ON 
	{databaseOwner}{objectQualifier}UserRelationships.UserID = {databaseOwner}{objectQualifier}Users.UserID;

GO


IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetRelationshipLinks') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetRelationshipLinks
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetRelationshipLinks
AS
SELECT 
	UserRelationshipId, UserId, RelatedUserID, RelationshipID
FROM 
	{databaseOwner}{objectQualifier}UserRelationships

GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetUserCommunityPostsCount') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetUserCommunityPostsCount
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetUserCommunityPostsCount
	@UserId int
AS
SELECT 
	Count(*) AS QueryResult
FROM 
	{databaseOwner}{objectQualifier}Journal
WHERE
	UserId = @UserId

GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetUserCommunityPostsCount') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetUserForumPostsCount
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetUserCommunityPostsCount
	@UserId int
AS
SELECT 
	Count(*) AS QueryResult
FROM 
	{databaseOwner}{objectQualifier}Journal
WHERE
	UserId = @UserId

GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetCountRepliesFromFriends') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetCountRepliesFromFriends
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetCountRepliesFromFriends
	@UserId int
AS

SELECT 
	Count(*) AS QueryResult
FROM 
	{databaseOwner}{objectQualifier}Journal_Comments AS c
INNER JOIN
	{databaseOwner}{objectQualifier}Journal AS j
ON
	c.JournalId = j.JournalId
WHERE
	c.UserId
IN
(
	SELECT 
	CASE WHEN 
		UserID = @UserId 
	THEN 
		RelatedUserID 
	ELSE 
		UserId 
	END 
	FROM 
		{databaseOwner}{objectQualifier}UserRelationships 
	WHERE 
		(UserID = @UserId OR RelatedUserId = @UserId) 
	AND 
		RelationshipId = 1
)
AND
	@UserId <> j.UserId

GO


IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetCountRepliesFromFollowers') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetCountRepliesFromFollowers
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetCountRepliesFromFollowers
	@UserId int
AS
SELECT 
	Count(*) AS QueryResult
FROM 
	{databaseOwner}{objectQualifier}Journal_Comments AS c
INNER JOIN
	{databaseOwner}{objectQualifier}Journal AS j
ON
	c.JournalId = j.JournalId
WHERE
	c.UserId
IN
(
	SELECT 
	CASE WHEN 
		UserID = @UserId 
	THEN 
		RelatedUserID 
	ELSE 
		UserId 
	END 
	FROM 
		{databaseOwner}{objectQualifier}UserRelationships 
	WHERE 
		(UserID = @UserId OR RelatedUserId = @UserId) 
	AND 
		RelationshipId = 2
)

GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetCountRepliesFromNonConnected') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetCountRepliesFromNonConnected
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetCountRepliesFromNonConnected
	@UserId int
AS
SELECT 
	Count(*) AS QueryResult
FROM 
	{databaseOwner}{objectQualifier}Journal_Comments AS c
INNER JOIN
	{databaseOwner}{objectQualifier}Journal AS j
ON
	c.JournalId = j.JournalId
WHERE
	c.UserId <> @UserId
AND
	c.UserId
NOT IN
(
	SELECT 
	CASE WHEN 
		UserID = @UserId 
	THEN 
		RelatedUserID 
	ELSE 
		UserId 
	END 
	FROM 
		{databaseOwner}{objectQualifier}UserRelationships 
	WHERE 
		(UserID = @UserId OR RelatedUserId = @UserId)
)

GO


IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetDevMonthlyDownloads') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetDevMonthlyDownloads
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetDevMonthlyDownloads
	@UserId int
AS
SELECT  [GameName] Name
       , COUNT(CASE WHEN  MONTH(FirstDownload) = 1 AND FirstDownload > DATEADD(year, -1, GETDATE()) THEN 1 ELSE NULL END) Jan
       , COUNT(CASE WHEN  MONTH(FirstDownload) = 2 AND FirstDownload > DATEADD(year, -1, GETDATE()) THEN 1 ELSE NULL END) Feb
       , COUNT(CASE WHEN  MONTH(FirstDownload) = 3 AND FirstDownload > DATEADD(year, -1, GETDATE()) THEN 1 ELSE NULL END) Mar
       , COUNT(CASE WHEN  MONTH(FirstDownload) = 4 AND FirstDownload > DATEADD(year, -1, GETDATE()) THEN 1 ELSE NULL END) Apr
       , COUNT(CASE WHEN  MONTH(FirstDownload) = 5 AND FirstDownload > DATEADD(year, -1, GETDATE()) THEN 1 ELSE NULL END) May
       , COUNT(CASE WHEN  MONTH(FirstDownload) = 6 AND FirstDownload > DATEADD(year, -1, GETDATE()) THEN 1 ELSE NULL END) Jun
       , COUNT(CASE WHEN  MONTH(FirstDownload) = 7 AND FirstDownload > DATEADD(year, -1, GETDATE()) THEN 1 ELSE NULL END) Jul
       , COUNT(CASE WHEN  MONTH(FirstDownload) = 8 AND FirstDownload > DATEADD(year, -1, GETDATE()) THEN 1 ELSE NULL END) Aug
       , COUNT(CASE WHEN  MONTH(FirstDownload) = 9 AND FirstDownload > DATEADD(year, -1, GETDATE()) THEN 1 ELSE NULL END) Sep
       , COUNT(CASE WHEN  MONTH(FirstDownload) = 10 AND FirstDownload > DATEADD(year, -1, GETDATE()) THEN 1 ELSE NULL END) Oct
       , COUNT(CASE WHEN  MONTH(FirstDownload) = 11 AND FirstDownload > DATEADD(year, -1, GETDATE()) THEN 1 ELSE NULL END) Nov
       , COUNT(CASE WHEN  MONTH(FirstDownload) = 12 AND FirstDownload > DATEADD(year, -1, GETDATE()) THEN 1 ELSE NULL END) Dec
FROM {databaseOwner}{objectQualifier}SGGameDownloads
GROUP BY [GameName]

GO


IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetDevGenreTrend') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetDevGenreTrend
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetDevGenreTrend
	@UserId int
AS
SELECT 
COUNT(
	CASE WHEN  GameGenre = 'FPS' THEN 1 ELSE NULL END) FPS
	,COUNT(CASE WHEN  GameGenre = 'Action' THEN 1 ELSE NULL END) Action
	,COUNT(CASE WHEN  GameGenre = 'Adventure' THEN 1 ELSE NULL END) Adventure
	,COUNT(CASE WHEN  GameGenre = 'Indie' THEN 1 ELSE NULL END) Indie
	,COUNT(CASE WHEN  GameGenre = 'Massive Multiplayer' THEN 1 ELSE NULL END) 'Massive Multiplayer'
	,COUNT(CASE WHEN  GameGenre = 'Racing' THEN 1 ELSE NULL END) Racing
	,COUNT(CASE WHEN  GameGenre = 'RPG' THEN 1 ELSE NULL END) RPG
	,COUNT(CASE WHEN  GameGenre = 'Sim' THEN 1 ELSE NULL END) Sim
	,COUNT(CASE WHEN  GameGenre = 'Sports' THEN 1 ELSE NULL END) Sports
	,COUNT(CASE WHEN  GameGenre = 'Strategy' THEN 1 ELSE NULL END) Strategy
FROM 
	{databaseOwner}{objectQualifier}SGGameDistribution_Game
WHERE
	DeveloperId = @UserId
GO


IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetUserGenreTrend') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetUserGenreTrend
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetUserGenreTrend
	@UserId int
AS
SELECT 
COUNT(
	CASE WHEN  g.GameGenre = 'FPS' THEN 1 ELSE NULL END) FPS
	,COUNT(CASE WHEN  g.GameGenre = 'Action' THEN 1 ELSE NULL END) Action
	,COUNT(CASE WHEN  g.GameGenre = 'Adventure' THEN 1 ELSE NULL END) Adventure
	,COUNT(CASE WHEN  g.GameGenre = 'Indie' THEN 1 ELSE NULL END) Indie
	,COUNT(CASE WHEN  g.GameGenre = 'Massive Multiplayer' THEN 1 ELSE NULL END) 'Massive Multiplayer'
	,COUNT(CASE WHEN  g.GameGenre = 'Racing' THEN 1 ELSE NULL END) Racing
	,COUNT(CASE WHEN  g.GameGenre = 'RPG' THEN 1 ELSE NULL END) RPG
	,COUNT(CASE WHEN  g.GameGenre = 'Sim' THEN 1 ELSE NULL END) Sim
	,COUNT(CASE WHEN  g.GameGenre = 'Sports' THEN 1 ELSE NULL END) Sports
	,COUNT(CASE WHEN  g.GameGenre = 'Strategy' THEN 1 ELSE NULL END) Strategy
FROM 
	{databaseOwner}{objectQualifier}SGGameDownloads AS d INNER JOIN {databaseOwner}{objectQualifier}SGGameDistribution_Game AS g ON d.GameId = g.GameId
WHERE d.DownloaderId = @UserId

GO


IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGDataModelling_GetAllUsersGenreTrend') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetAllUsersGenreTrend
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGDataModelling_GetAllUsersGenreTrend
AS
SELECT 
COUNT(
	CASE WHEN  g.GameGenre = 'FPS' THEN 1 ELSE NULL END) FPS
	,COUNT(CASE WHEN  g.GameGenre = 'Action' THEN 1 ELSE NULL END) Action
	,COUNT(CASE WHEN  g.GameGenre = 'Adventure' THEN 1 ELSE NULL END) Adventure
	,COUNT(CASE WHEN  g.GameGenre = 'Indie' THEN 1 ELSE NULL END) Indie
	,COUNT(CASE WHEN  g.GameGenre = 'Massive Multiplayer' THEN 1 ELSE NULL END) 'Massive Multiplayer'
	,COUNT(CASE WHEN  g.GameGenre = 'Racing' THEN 1 ELSE NULL END) Racing
	,COUNT(CASE WHEN  g.GameGenre = 'RPG' THEN 1 ELSE NULL END) RPG
	,COUNT(CASE WHEN  g.GameGenre = 'Sim' THEN 1 ELSE NULL END) Sim
	,COUNT(CASE WHEN  g.GameGenre = 'Sports' THEN 1 ELSE NULL END) Sports
	,COUNT(CASE WHEN  g.GameGenre = 'Strategy' THEN 1 ELSE NULL END) Strategy
FROM 
	{databaseOwner}{objectQualifier}SGGameDownloads AS d INNER JOIN {databaseOwner}{objectQualifier}SGGameDistribution_Game AS g ON d.GameId = g.GameId 

GO
/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/